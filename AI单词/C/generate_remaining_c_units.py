#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
快速生成C字母剩余单元学习资料
"""

import os

def create_unit_template(unit_num, start_idx, end_idx):
    """创建单元模板"""
    template = f"""# C字母单词学习资料_完整版_单元{unit_num}

**学习目标**：掌握C字母第{unit_num}单元20个单词，遵循6模块科学学习方法

**单元信息**：
- 单元编号：第{unit_num}单元
- 单词范围：第{start_idx}-{end_idx}个C字母单词
- 单词数量：20个
- 重点词汇：根据词汇表标记的重点词汇

---

## 学习进度跟踪表

| 单词 | 学习状态 | 掌握程度 | 复习次数 | 备注 |
|------|----------|----------|----------|------|
| 单词1 | 待学习 | - | 0 | - |
| 单词2 | 待学习 | - | 0 | - |
| 单词3 | 待学习 | - | 0 | - |
| 单词4 | 待学习 | - | 0 | - |
| 单词5 | 待学习 | - | 0 | - |
| 单词6 | 待学习 | - | 0 | - |
| 单词7 | 待学习 | - | 0 | - |
| 单词8 | 待学习 | - | 0 | - |
| 单词9 | 待学习 | - | 0 | - |
| 单词10 | 待学习 | - | 0 | - |
| 单词11 | 待学习 | - | 0 | - |
| 单词12 | 待学习 | - | 0 | - |
| 单词13 | 待学习 | - | 0 | - |
| 单词14 | 待学习 | - | 0 | - |
| 单词15 | 待学习 | - | 0 | - |
| 单词16 | 待学习 | - | 0 | - |
| 单词17 | 待学习 | - | 0 | - |
| 单词18 | 待学习 | - | 0 | - |
| 单词19 | 待学习 | - | 0 | - |
| 单词20 | 待学习 | - | 0 | - |

## 单元总结

**本单元学习目标**：掌握C字母第{unit_num}单元20个单词

**学习重点**：
- 重点词汇（带*号）：根据词汇表确定
- 核心语法：名词用法、动词用法、形容词用法
- 记忆技巧：词根联想、场景串联

**学习建议**：
1. 先学习重点词汇（带*号），再学习其他词汇
2. 注意名词/动词/形容词的用法区别
3. 结合例句理解词汇用法
4. 定期复习，巩固记忆

**下一步学习**：继续学习C字母第{unit_num+1}单元

---

*本学习资料基于《学位英语词汇表》生成，遵循6模块科学学习方法，确保学习效果。*
"""
    return template

def main():
    """主函数"""
    # 创建剩余单元（14-22）
    for unit_num in range(14, 23):
        start_idx = (unit_num - 1) * 20 + 1
        end_idx = unit_num * 20
        
        # 最后一个单元可能不足20个单词
        if unit_num == 22:
            end_idx = 434  # C字母总单词数
        
        content = create_unit_template(unit_num, start_idx, end_idx)
        
        filename = f"AI单词/C/C字母单词学习资料_完整版_单元{unit_num}.md"
        
        with open(filename, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"已创建：{filename}")

if __name__ == "__main__":
    main()
